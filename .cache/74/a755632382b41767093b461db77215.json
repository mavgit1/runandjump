{"id":"../node_modules/@pixi/utils/lib/url.mjs","dependencies":[{"name":"/Users/marvin/Projects/runandjump/node_modules/@pixi/utils/lib/url.mjs.map","includedInParent":true,"mtime":1707171146131},{"name":"/Users/marvin/Projects/runandjump/package.json","includedInParent":true,"mtime":1707171910916},{"name":"/Users/marvin/Projects/runandjump/node_modules/@pixi/utils/package.json","includedInParent":true,"mtime":1707171146122},{"name":"url","loc":{"line":1,"column":39,"index":39},"parent":"/Users/marvin/Projects/runandjump/node_modules/@pixi/utils/lib/url.mjs","resolved":"/Users/marvin/Projects/runandjump/node_modules/url/url.js"},{"name":"./logging/deprecation.mjs","loc":{"line":2,"column":28,"index":74},"parent":"/Users/marvin/Projects/runandjump/node_modules/@pixi/utils/lib/url.mjs","resolved":"/Users/marvin/Projects/runandjump/node_modules/@pixi/utils/lib/logging/deprecation.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.url = void 0;\nvar _url = require(\"url\");\nvar _deprecation = require(\"./logging/deprecation.mjs\");\nconst url = exports.url = {\n  /**\n   * @deprecated since 7.3.0\n   */\n  get parse() {\n    return (0, _deprecation.deprecation)(\"7.3.0\", \"utils.url.parse is deprecated, use native URL API instead.\"), _url.parse;\n  },\n  /**\n   * @deprecated since 7.3.0\n   */\n  get format() {\n    return (0, _deprecation.deprecation)(\"7.3.0\", \"utils.url.format is deprecated, use native URL API instead.\"), _url.format;\n  },\n  /**\n   * @deprecated since 7.3.0\n   */\n  get resolve() {\n    return (0, _deprecation.deprecation)(\"7.3.0\", \"utils.url.resolve is deprecated, use native URL API instead.\"), _url.resolve;\n  }\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../src/url.ts","name":null,"original":{"line":83,"column":7},"generated":{"line":9,"column":0}},{"source":"../src/url.ts","name":null,"original":{"line":83,"column":13},"generated":{"line":9,"column":6}},{"source":"../src/url.ts","name":null,"original":{"line":83,"column":13},"generated":{"line":9,"column":9}},{"source":"../src/url.ts","name":null,"original":{"line":83,"column":13},"generated":{"line":9,"column":12}},{"source":"../src/url.ts","name":null,"original":{"line":83,"column":13},"generated":{"line":9,"column":19}},{"source":"../src/url.ts","name":null,"original":{"line":83,"column":13},"generated":{"line":9,"column":20}},{"source":"../src/url.ts","name":null,"original":{"line":83,"column":13},"generated":{"line":9,"column":23}},{"source":"../src/url.ts","name":null,"original":{"line":83,"column":19},"generated":{"line":9,"column":26}},{"source":"../src/url.ts","name":null,"original":{"line":83,"column":19},"generated":{"line":10,"column":2}},{"source":"../src/url.ts","name":null,"original":{"line":83,"column":19},"generated":{"line":11,"column":0}},{"source":"../src/url.ts","name":null,"original":{"line":83,"column":19},"generated":{"line":12,"column":0}},{"source":"../src/url.ts","name":null,"original":{"line":87,"column":4},"generated":{"line":13,"column":2}},{"source":"../src/url.ts","name":null,"original":{"line":87,"column":8},"generated":{"line":13,"column":6}},{"source":"../src/url.ts","name":null,"original":{"line":87,"column":8},"generated":{"line":13,"column":11}},{"source":"../src/url.ts","name":null,"original":{"line":87,"column":8},"generated":{"line":13,"column":12}},{"source":"../src/url.ts","name":null,"original":{"line":88,"column":4},"generated":{"line":13,"column":14}},{"source":"../src/url.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":14,"column":4}},{"source":"../src/url.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":14,"column":11}},{"source":"../src/url.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":14,"column":15}},{"source":"../src/url.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":14,"column":39}},{"source":"../src/url.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":14,"column":41}},{"source":"../src/url.ts","name":null,"original":{"line":91,"column":24},"generated":{"line":14,"column":48}},{"source":"../src/url.ts","name":null,"original":{"line":91,"column":33},"generated":{"line":14,"column":50}},{"source":"../src/url.ts","name":null,"original":{"line":91,"column":93},"generated":{"line":14,"column":110}},{"source":"../src/url.ts","name":null,"original":{"line":91,"column":93},"generated":{"line":14,"column":111}},{"source":"../src/url.ts","name":"_parse","original":{"line":94,"column":15},"generated":{"line":14,"column":113}},{"source":"../src/url.ts","name":"_parse","original":{"line":94,"column":15},"generated":{"line":14,"column":123}},{"source":"../src/url.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":15,"column":2}},{"source":"../src/url.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":15,"column":3}},{"source":"../src/url.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":16,"column":2}},{"source":"../src/url.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":17,"column":0}},{"source":"../src/url.ts","name":null,"original":{"line":95,"column":4},"generated":{"line":18,"column":0}},{"source":"../src/url.ts","name":null,"original":{"line":99,"column":4},"generated":{"line":19,"column":2}},{"source":"../src/url.ts","name":null,"original":{"line":99,"column":8},"generated":{"line":19,"column":6}},{"source":"../src/url.ts","name":null,"original":{"line":99,"column":8},"generated":{"line":19,"column":12}},{"source":"../src/url.ts","name":null,"original":{"line":99,"column":8},"generated":{"line":19,"column":13}},{"source":"../src/url.ts","name":null,"original":{"line":100,"column":4},"generated":{"line":19,"column":15}},{"source":"../src/url.ts","name":null,"original":{"line":103,"column":24},"generated":{"line":20,"column":4}},{"source":"../src/url.ts","name":null,"original":{"line":103,"column":24},"generated":{"line":20,"column":11}},{"source":"../src/url.ts","name":null,"original":{"line":103,"column":24},"generated":{"line":20,"column":15}},{"source":"../src/url.ts","name":null,"original":{"line":103,"column":24},"generated":{"line":20,"column":39}},{"source":"../src/url.ts","name":null,"original":{"line":103,"column":24},"generated":{"line":20,"column":41}},{"source":"../src/url.ts","name":null,"original":{"line":103,"column":24},"generated":{"line":20,"column":48}},{"source":"../src/url.ts","name":null,"original":{"line":103,"column":33},"generated":{"line":20,"column":50}},{"source":"../src/url.ts","name":null,"original":{"line":103,"column":94},"generated":{"line":20,"column":111}},{"source":"../src/url.ts","name":null,"original":{"line":103,"column":94},"generated":{"line":20,"column":112}},{"source":"../src/url.ts","name":"_format","original":{"line":106,"column":15},"generated":{"line":20,"column":114}},{"source":"../src/url.ts","name":"_format","original":{"line":106,"column":15},"generated":{"line":20,"column":125}},{"source":"../src/url.ts","name":null,"original":{"line":107,"column":4},"generated":{"line":21,"column":2}},{"source":"../src/url.ts","name":null,"original":{"line":107,"column":4},"generated":{"line":21,"column":3}},{"source":"../src/url.ts","name":null,"original":{"line":107,"column":4},"generated":{"line":22,"column":2}},{"source":"../src/url.ts","name":null,"original":{"line":107,"column":4},"generated":{"line":23,"column":0}},{"source":"../src/url.ts","name":null,"original":{"line":107,"column":4},"generated":{"line":24,"column":0}},{"source":"../src/url.ts","name":null,"original":{"line":111,"column":4},"generated":{"line":25,"column":2}},{"source":"../src/url.ts","name":null,"original":{"line":111,"column":8},"generated":{"line":25,"column":6}},{"source":"../src/url.ts","name":null,"original":{"line":111,"column":8},"generated":{"line":25,"column":13}},{"source":"../src/url.ts","name":null,"original":{"line":111,"column":8},"generated":{"line":25,"column":14}},{"source":"../src/url.ts","name":null,"original":{"line":112,"column":4},"generated":{"line":25,"column":16}},{"source":"../src/url.ts","name":null,"original":{"line":115,"column":24},"generated":{"line":26,"column":4}},{"source":"../src/url.ts","name":null,"original":{"line":115,"column":24},"generated":{"line":26,"column":11}},{"source":"../src/url.ts","name":null,"original":{"line":115,"column":24},"generated":{"line":26,"column":15}},{"source":"../src/url.ts","name":null,"original":{"line":115,"column":24},"generated":{"line":26,"column":39}},{"source":"../src/url.ts","name":null,"original":{"line":115,"column":24},"generated":{"line":26,"column":41}},{"source":"../src/url.ts","name":null,"original":{"line":115,"column":24},"generated":{"line":26,"column":48}},{"source":"../src/url.ts","name":null,"original":{"line":115,"column":33},"generated":{"line":26,"column":50}},{"source":"../src/url.ts","name":null,"original":{"line":115,"column":95},"generated":{"line":26,"column":112}},{"source":"../src/url.ts","name":null,"original":{"line":115,"column":95},"generated":{"line":26,"column":113}},{"source":"../src/url.ts","name":"_resolve","original":{"line":118,"column":15},"generated":{"line":26,"column":115}},{"source":"../src/url.ts","name":"_resolve","original":{"line":118,"column":15},"generated":{"line":26,"column":127}},{"source":"../src/url.ts","name":null,"original":{"line":119,"column":4},"generated":{"line":27,"column":2}},{"source":"../src/url.ts","name":null,"original":{"line":120,"column":0},"generated":{"line":28,"column":0}},{"source":"../src/url.ts","name":null,"original":{"line":120,"column":0},"generated":{"line":28,"column":1}}],"sources":{"../src/url.ts":"/*\n * This file contains redeclared types for Node `url` and `querystring` modules. These modules\n * don't provide their own typings but instead are a part of the full Node typings. The purpose of\n * this file is to redeclare the required types to avoid having the whole Node types as a\n * dependency.\n */\n\nimport { format as _format, parse as _parse, resolve as _resolve } from 'url';\nimport { deprecation } from './logging/deprecation';\n\ninterface ParsedUrlQuery\n{\n    [key: string]: string | string[];\n}\n\ninterface ParsedUrlQueryInput\n{\n    [key: string]: unknown;\n}\n\ninterface UrlObjectCommon\n{\n    auth?: string;\n    hash?: string;\n    host?: string;\n    hostname?: string;\n    href?: string;\n    path?: string;\n    pathname?: string;\n    protocol?: string;\n    search?: string;\n    slashes?: boolean;\n}\n\n// Input to `url.format`\ninterface UrlObject extends UrlObjectCommon\n{\n    port?: string | number;\n    query?: string | null | ParsedUrlQueryInput;\n}\n\n// Output of `url.parse`\ninterface Url extends UrlObjectCommon\n{\n    port?: string;\n    query?: string | null | ParsedUrlQuery;\n}\n\ninterface UrlWithParsedQuery extends Url\n{\n    query: ParsedUrlQuery;\n}\n\ninterface UrlWithStringQuery extends Url\n{\n    query: string | null;\n}\n\ninterface URLFormatOptions\n{\n    auth?: boolean;\n    fragment?: boolean;\n    search?: boolean;\n    unicode?: boolean;\n}\n\ntype ParseFunction = {\n    (urlStr: string): UrlWithStringQuery;\n    (urlStr: string, parseQueryString: false | undefined, slashesDenoteHost?: boolean): UrlWithStringQuery;\n    (urlStr: string, parseQueryString: true, slashesDenoteHost?: boolean): UrlWithParsedQuery;\n    (urlStr: string, parseQueryString: boolean, slashesDenoteHost?: boolean): Url;\n};\n\ntype FormatFunction = {\n    (URL: URL, options?: URLFormatOptions): string;\n    (urlObject: UrlObject | string): string;\n};\n\ntype ResolveFunction = {\n    (from: string, to: string): string;\n};\n\nexport const url = {\n    /**\n     * @deprecated since 7.3.0\n     */\n    get parse()\n    {\n        if (process.env.DEBUG)\n        {\n            deprecation('7.3.0', 'utils.url.parse is deprecated, use native URL API instead.');\n        }\n\n        return _parse as ParseFunction;\n    },\n    /**\n     * @deprecated since 7.3.0\n     */\n    get format()\n    {\n        if (process.env.DEBUG)\n        {\n            deprecation('7.3.0', 'utils.url.format is deprecated, use native URL API instead.');\n        }\n\n        return _format as FormatFunction;\n    },\n    /**\n     * @deprecated since 7.3.0\n     */\n    get resolve()\n    {\n        if (process.env.DEBUG)\n        {\n            deprecation('7.3.0', 'utils.url.resolve is deprecated, use native URL API instead.');\n        }\n\n        return _resolve as ResolveFunction;\n    }\n};\n"},"lineCount":null}},"error":null,"hash":"8796fe08061aca3a1169b13ef702bed0","cacheData":{"env":{}}}