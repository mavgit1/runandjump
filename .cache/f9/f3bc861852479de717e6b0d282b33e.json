{"id":"../node_modules/@pixi/filter-displacement/lib/displacement.frag.mjs","dependencies":[{"name":"/Users/marvin/Projects/runandjump/node_modules/@pixi/filter-displacement/lib/displacement.frag.mjs.map","includedInParent":true,"mtime":1707171146987},{"name":"/Users/marvin/Projects/runandjump/package.json","includedInParent":true,"mtime":1707171910916},{"name":"/Users/marvin/Projects/runandjump/node_modules/@pixi/filter-displacement/package.json","includedInParent":true,"mtime":1707171146987}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar fragment = exports.default = `varying vec2 vFilterCoord;\nvarying vec2 vTextureCoord;\n\nuniform vec2 scale;\nuniform mat2 rotation;\nuniform sampler2D uSampler;\nuniform sampler2D mapSampler;\n\nuniform highp vec4 inputSize;\nuniform vec4 inputClamp;\n\nvoid main(void)\n{\n  vec4 map =  texture2D(mapSampler, vFilterCoord);\n\n  map -= 0.5;\n  map.xy = scale * inputSize.zw * (rotation * map.xy);\n\n  gl_FragColor = texture2D(uSampler, clamp(vec2(vTextureCoord.x + map.x, vTextureCoord.y + map.y), inputClamp.xy, inputClamp.zw));\n}\n`;"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"a81994027b58df48b5f4945eec70ff8f","cacheData":{"env":{}}}