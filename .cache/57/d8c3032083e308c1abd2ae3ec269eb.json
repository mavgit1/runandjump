{"id":"../node_modules/@pixi/core/lib/filters/spriteMask/spriteMaskFilter.frag.mjs","dependencies":[{"name":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/lib/filters/spriteMask/spriteMaskFilter.frag.mjs.map","includedInParent":true,"mtime":1707171147478},{"name":"/Users/marvin/Projects/runandjump/package.json","includedInParent":true,"mtime":1707171910916},{"name":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/package.json","includedInParent":true,"mtime":1707171147452}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar fragment = exports.default = `varying vec2 vMaskCoord;\nvarying vec2 vTextureCoord;\n\nuniform sampler2D uSampler;\nuniform sampler2D mask;\nuniform float alpha;\nuniform float npmAlpha;\nuniform vec4 maskClamp;\n\nvoid main(void)\n{\n    float clip = step(3.5,\n        step(maskClamp.x, vMaskCoord.x) +\n        step(maskClamp.y, vMaskCoord.y) +\n        step(vMaskCoord.x, maskClamp.z) +\n        step(vMaskCoord.y, maskClamp.w));\n\n    vec4 original = texture2D(uSampler, vTextureCoord);\n    vec4 masky = texture2D(mask, vMaskCoord);\n    float alphaMul = 1.0 - npmAlpha * (1.0 - masky.a);\n\n    original *= (alphaMul * masky.r * alpha * clip);\n\n    gl_FragColor = original;\n}\n`;"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"5cebd0847aef865d9fb6c950f3b5c4cd","cacheData":{"env":{}}}