{"id":"../node_modules/@pixi/core/lib/filters/Filter.mjs","dependencies":[{"name":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/lib/filters/Filter.mjs.map","includedInParent":true,"mtime":1707171147464},{"name":"/Users/marvin/Projects/runandjump/package.json","includedInParent":true,"mtime":1707178231918},{"name":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/package.json","includedInParent":true,"mtime":1707171147452},{"name":"@pixi/constants","loc":{"line":1,"column":29,"index":29},"parent":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/lib/filters/Filter.mjs","resolved":"/Users/marvin/Projects/runandjump/node_modules/@pixi/constants/lib/index.mjs"},{"name":"../shader/Program.mjs","loc":{"line":2,"column":24,"index":72},"parent":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/lib/filters/Filter.mjs","resolved":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/lib/shader/Program.mjs"},{"name":"../shader/Shader.mjs","loc":{"line":3,"column":23,"index":120},"parent":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/lib/filters/Filter.mjs","resolved":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/lib/shader/Shader.mjs"},{"name":"../state/State.mjs","loc":{"line":4,"column":22,"index":166},"parent":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/lib/filters/Filter.mjs","resolved":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/lib/state/State.mjs"},{"name":"./defaultFilter.frag.mjs","loc":{"line":5,"column":28,"index":216},"parent":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/lib/filters/Filter.mjs","resolved":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/lib/filters/defaultFilter.frag.mjs"},{"name":"./defaultFilter.vert.mjs","loc":{"line":6,"column":26,"index":270},"parent":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/lib/filters/Filter.mjs","resolved":"/Users/marvin/Projects/runandjump/node_modules/@pixi/core/lib/filters/defaultFilter.vert.mjs"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Filter = void 0;\nvar _constants = require(\"@pixi/constants\");\nvar _Program = require(\"../shader/Program.mjs\");\nvar _Shader = require(\"../shader/Shader.mjs\");\nvar _State = require(\"../state/State.mjs\");\nvar _defaultFilterFrag = _interopRequireDefault(require(\"./defaultFilter.frag.mjs\"));\nvar _defaultFilterVert = _interopRequireDefault(require(\"./defaultFilter.vert.mjs\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst _Filter = class _Filter2 extends _Shader.Shader {\n  /**\n   * @param vertexSrc - The source of the vertex shader.\n   * @param fragmentSrc - The source of the fragment shader.\n   * @param uniforms - Custom uniforms to use to augment the built-in ones.\n   */\n  constructor(vertexSrc, fragmentSrc, uniforms) {\n    const program = _Program.Program.from(vertexSrc || _Filter2.defaultVertexSrc, fragmentSrc || _Filter2.defaultFragmentSrc);\n    super(program, uniforms), this.padding = 0, this.resolution = _Filter2.defaultResolution, this.multisample = _Filter2.defaultMultisample, this.enabled = !0, this.autoFit = !0, this.state = new _State.State();\n  }\n  /**\n   * Applies the filter\n   * @param {PIXI.FilterSystem} filterManager - The renderer to retrieve the filter from\n   * @param {PIXI.RenderTexture} input - The input render target.\n   * @param {PIXI.RenderTexture} output - The target to output to.\n   * @param {PIXI.CLEAR_MODES} [clearMode] - Should the output be cleared before rendering to it.\n   * @param {object} [_currentState] - It's current state of filter.\n   *        There are some useful properties in the currentState :\n   *        target, filters, sourceFrame, destinationFrame, renderTarget, resolution\n   */\n  apply(filterManager, input, output, clearMode, _currentState) {\n    filterManager.applyFilter(this, input, output, clearMode);\n  }\n  /**\n   * Sets the blend mode of the filter.\n   * @default PIXI.BLEND_MODES.NORMAL\n   */\n  get blendMode() {\n    return this.state.blendMode;\n  }\n  set blendMode(value) {\n    this.state.blendMode = value;\n  }\n  /**\n   * The resolution of the filter. Setting this to be lower will lower the quality but\n   * increase the performance of the filter.\n   * If set to `null` or `0`, the resolution of the current render target is used.\n   * @default PIXI.Filter.defaultResolution\n   */\n  get resolution() {\n    return this._resolution;\n  }\n  set resolution(value) {\n    this._resolution = value;\n  }\n  /**\n   * The default vertex shader source\n   * @readonly\n   */\n  static get defaultVertexSrc() {\n    return _defaultFilterVert.default;\n  }\n  /**\n   * The default fragment shader source\n   * @readonly\n   */\n  static get defaultFragmentSrc() {\n    return _defaultFilterFrag.default;\n  }\n};\n_Filter.defaultResolution = 1,\n/**\n* Default filter samples for any filter.\n* @static\n* @type {PIXI.MSAA_QUALITY|null}\n* @default PIXI.MSAA_QUALITY.NONE\n*/\n_Filter.defaultMultisample = _constants.MSAA_QUALITY.NONE;\nlet Filter = exports.Filter = _Filter;"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":7},"generated":{"line":14,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":13},"generated":{"line":14,"column":6}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":13},"generated":{"line":14,"column":13}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":7},"generated":{"line":14,"column":16}},{"source":"../../src/filters/Filter.ts","name":"_Filter","original":{"line":188,"column":13},"generated":{"line":14,"column":22}},{"source":"../../src/filters/Filter.ts","name":"_Filter","original":{"line":188,"column":13},"generated":{"line":14,"column":30}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":28},"generated":{"line":14,"column":39}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":28},"generated":{"line":14,"column":53}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":189,"column":0},"generated":{"line":14,"column":54}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":189,"column":0},"generated":{"line":15,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":189,"column":0},"generated":{"line":16,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":189,"column":0},"generated":{"line":17,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":189,"column":0},"generated":{"line":18,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":189,"column":0},"generated":{"line":19,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":244,"column":4},"generated":{"line":20,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":244,"column":4},"generated":{"line":20,"column":13}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":244,"column":16},"generated":{"line":20,"column":14}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":244,"column":16},"generated":{"line":20,"column":23}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":244,"column":36},"generated":{"line":20,"column":25}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":244,"column":36},"generated":{"line":20,"column":36}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":244,"column":58},"generated":{"line":20,"column":38}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":244,"column":58},"generated":{"line":20,"column":46}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":245,"column":4},"generated":{"line":20,"column":48}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":246,"column":8},"generated":{"line":21,"column":4}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":246,"column":14},"generated":{"line":21,"column":10}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":246,"column":14},"generated":{"line":21,"column":17}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":246,"column":24},"generated":{"line":21,"column":20}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":246,"column":24},"generated":{"line":21,"column":36}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":246,"column":32},"generated":{"line":21,"column":37}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":246,"column":32},"generated":{"line":21,"column":41}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":246,"column":37},"generated":{"line":21,"column":42}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":246,"column":37},"generated":{"line":21,"column":51}},{"source":"../../src/filters/Filter.ts","name":"_Filter","original":{"line":246,"column":50},"generated":{"line":21,"column":55}},{"source":"../../src/filters/Filter.ts","name":"_Filter","original":{"line":246,"column":50},"generated":{"line":21,"column":63}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":246,"column":57},"generated":{"line":21,"column":64}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":246,"column":57},"generated":{"line":21,"column":80}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":247,"column":12},"generated":{"line":21,"column":82}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":247,"column":12},"generated":{"line":21,"column":93}},{"source":"../../src/filters/Filter.ts","name":"_Filter","original":{"line":247,"column":27},"generated":{"line":21,"column":97}},{"source":"../../src/filters/Filter.ts","name":"_Filter","original":{"line":247,"column":27},"generated":{"line":21,"column":105}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":247,"column":34},"generated":{"line":21,"column":106}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":247,"column":34},"generated":{"line":21,"column":124}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":247,"column":34},"generated":{"line":21,"column":125}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":249,"column":8},"generated":{"line":22,"column":4}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":249,"column":8},"generated":{"line":22,"column":9}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":249,"column":14},"generated":{"line":22,"column":10}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":249,"column":14},"generated":{"line":22,"column":17}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":249,"column":23},"generated":{"line":22,"column":19}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":249,"column":31},"generated":{"line":22,"column":27}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":249,"column":31},"generated":{"line":22,"column":28}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":251,"column":8},"generated":{"line":22,"column":30}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":251,"column":8},"generated":{"line":22,"column":34}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":251,"column":13},"generated":{"line":22,"column":35}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":251,"column":13},"generated":{"line":22,"column":42}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":251,"column":23},"generated":{"line":22,"column":45}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":251,"column":23},"generated":{"line":22,"column":46}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":252,"column":8},"generated":{"line":22,"column":48}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":252,"column":8},"generated":{"line":22,"column":52}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":252,"column":13},"generated":{"line":22,"column":53}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":252,"column":13},"generated":{"line":22,"column":63}},{"source":"../../src/filters/Filter.ts","name":"_Filter","original":{"line":252,"column":26},"generated":{"line":22,"column":66}},{"source":"../../src/filters/Filter.ts","name":"_Filter","original":{"line":252,"column":26},"generated":{"line":22,"column":74}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":252,"column":33},"generated":{"line":22,"column":75}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":252,"column":33},"generated":{"line":22,"column":92}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":253,"column":8},"generated":{"line":22,"column":94}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":253,"column":8},"generated":{"line":22,"column":98}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":253,"column":13},"generated":{"line":22,"column":99}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":253,"column":13},"generated":{"line":22,"column":110}},{"source":"../../src/filters/Filter.ts","name":"_Filter","original":{"line":253,"column":27},"generated":{"line":22,"column":113}},{"source":"../../src/filters/Filter.ts","name":"_Filter","original":{"line":253,"column":27},"generated":{"line":22,"column":121}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":253,"column":34},"generated":{"line":22,"column":122}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":253,"column":34},"generated":{"line":22,"column":140}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":254,"column":8},"generated":{"line":22,"column":142}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":254,"column":8},"generated":{"line":22,"column":146}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":254,"column":13},"generated":{"line":22,"column":147}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":254,"column":13},"generated":{"line":22,"column":154}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":254,"column":23},"generated":{"line":22,"column":157}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":254,"column":23},"generated":{"line":22,"column":158}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":254,"column":23},"generated":{"line":22,"column":159}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":255,"column":8},"generated":{"line":22,"column":161}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":255,"column":8},"generated":{"line":22,"column":165}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":255,"column":13},"generated":{"line":22,"column":166}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":255,"column":13},"generated":{"line":22,"column":173}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":255,"column":23},"generated":{"line":22,"column":176}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":255,"column":23},"generated":{"line":22,"column":177}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":255,"column":23},"generated":{"line":22,"column":178}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":256,"column":8},"generated":{"line":22,"column":180}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":256,"column":8},"generated":{"line":22,"column":184}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":256,"column":13},"generated":{"line":22,"column":185}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":256,"column":13},"generated":{"line":22,"column":190}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":256,"column":21},"generated":{"line":22,"column":193}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":256,"column":25},"generated":{"line":22,"column":197}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":256,"column":25},"generated":{"line":22,"column":209}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":256,"column":25},"generated":{"line":22,"column":210}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":256,"column":25},"generated":{"line":22,"column":211}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":257,"column":4},"generated":{"line":23,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":257,"column":4},"generated":{"line":24,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":257,"column":4},"generated":{"line":25,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":257,"column":4},"generated":{"line":26,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":257,"column":4},"generated":{"line":27,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":257,"column":4},"generated":{"line":28,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":257,"column":4},"generated":{"line":29,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":257,"column":4},"generated":{"line":30,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":257,"column":4},"generated":{"line":31,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":257,"column":4},"generated":{"line":32,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":257,"column":4},"generated":{"line":33,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":269,"column":4},"generated":{"line":34,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":269,"column":4},"generated":{"line":34,"column":7}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":269,"column":10},"generated":{"line":34,"column":8}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":269,"column":10},"generated":{"line":34,"column":21}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":269,"column":39},"generated":{"line":34,"column":23}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":269,"column":39},"generated":{"line":34,"column":28}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":269,"column":61},"generated":{"line":34,"column":30}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":269,"column":61},"generated":{"line":34,"column":36}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":269,"column":84},"generated":{"line":34,"column":38}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":269,"column":84},"generated":{"line":34,"column":47}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":270,"column":8},"generated":{"line":34,"column":49}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":270,"column":8},"generated":{"line":34,"column":62}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":271,"column":4},"generated":{"line":34,"column":64}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":274,"column":8},"generated":{"line":35,"column":4}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":274,"column":8},"generated":{"line":35,"column":17}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":274,"column":22},"generated":{"line":35,"column":18}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":274,"column":22},"generated":{"line":35,"column":29}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":274,"column":34},"generated":{"line":35,"column":30}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":274,"column":34},"generated":{"line":35,"column":34}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":274,"column":40},"generated":{"line":35,"column":36}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":274,"column":40},"generated":{"line":35,"column":41}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":274,"column":47},"generated":{"line":35,"column":43}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":274,"column":47},"generated":{"line":35,"column":49}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":274,"column":55},"generated":{"line":35,"column":51}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":274,"column":64},"generated":{"line":35,"column":60}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":274,"column":64},"generated":{"line":35,"column":61}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":277,"column":4},"generated":{"line":36,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":277,"column":4},"generated":{"line":37,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":277,"column":4},"generated":{"line":38,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":277,"column":4},"generated":{"line":39,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":277,"column":4},"generated":{"line":40,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":283,"column":4},"generated":{"line":41,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":283,"column":8},"generated":{"line":41,"column":6}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":283,"column":8},"generated":{"line":41,"column":15}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":283,"column":8},"generated":{"line":41,"column":16}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":284,"column":4},"generated":{"line":41,"column":18}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":285,"column":8},"generated":{"line":42,"column":4}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":285,"column":15},"generated":{"line":42,"column":11}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":285,"column":15},"generated":{"line":42,"column":15}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":285,"column":20},"generated":{"line":42,"column":16}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":285,"column":20},"generated":{"line":42,"column":21}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":285,"column":26},"generated":{"line":42,"column":22}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":285,"column":26},"generated":{"line":42,"column":31}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":286,"column":4},"generated":{"line":43,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":288,"column":4},"generated":{"line":44,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":288,"column":8},"generated":{"line":44,"column":6}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":288,"column":8},"generated":{"line":44,"column":15}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":288,"column":18},"generated":{"line":44,"column":16}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":288,"column":18},"generated":{"line":44,"column":21}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":289,"column":4},"generated":{"line":44,"column":23}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":290,"column":8},"generated":{"line":45,"column":4}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":290,"column":8},"generated":{"line":45,"column":8}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":290,"column":13},"generated":{"line":45,"column":9}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":290,"column":13},"generated":{"line":45,"column":14}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":290,"column":19},"generated":{"line":45,"column":15}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":290,"column":19},"generated":{"line":45,"column":24}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":290,"column":31},"generated":{"line":45,"column":27}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":290,"column":31},"generated":{"line":45,"column":32}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":291,"column":4},"generated":{"line":46,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":291,"column":4},"generated":{"line":47,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":291,"column":4},"generated":{"line":48,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":291,"column":4},"generated":{"line":49,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":291,"column":4},"generated":{"line":50,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":291,"column":4},"generated":{"line":51,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":291,"column":4},"generated":{"line":52,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":299,"column":4},"generated":{"line":53,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":299,"column":8},"generated":{"line":53,"column":6}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":299,"column":8},"generated":{"line":53,"column":16}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":299,"column":8},"generated":{"line":53,"column":17}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":300,"column":4},"generated":{"line":53,"column":19}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":301,"column":8},"generated":{"line":54,"column":4}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":301,"column":15},"generated":{"line":54,"column":11}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":301,"column":15},"generated":{"line":54,"column":15}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":301,"column":20},"generated":{"line":54,"column":16}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":301,"column":20},"generated":{"line":54,"column":27}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":302,"column":4},"generated":{"line":55,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":304,"column":4},"generated":{"line":56,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":304,"column":8},"generated":{"line":56,"column":6}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":304,"column":8},"generated":{"line":56,"column":16}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":304,"column":19},"generated":{"line":56,"column":17}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":304,"column":19},"generated":{"line":56,"column":22}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":305,"column":4},"generated":{"line":56,"column":24}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":306,"column":8},"generated":{"line":57,"column":4}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":306,"column":8},"generated":{"line":57,"column":8}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":306,"column":13},"generated":{"line":57,"column":9}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":306,"column":13},"generated":{"line":57,"column":20}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":306,"column":27},"generated":{"line":57,"column":23}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":306,"column":27},"generated":{"line":57,"column":28}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":307,"column":4},"generated":{"line":58,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":307,"column":4},"generated":{"line":59,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":307,"column":4},"generated":{"line":60,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":307,"column":4},"generated":{"line":61,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":307,"column":4},"generated":{"line":62,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":313,"column":4},"generated":{"line":63,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":313,"column":15},"generated":{"line":63,"column":13}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":313,"column":15},"generated":{"line":63,"column":29}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":313,"column":15},"generated":{"line":63,"column":30}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":314,"column":4},"generated":{"line":63,"column":32}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":315,"column":15},"generated":{"line":64,"column":4}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":315,"column":15},"generated":{"line":64,"column":11}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":315,"column":15},"generated":{"line":64,"column":37}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":316,"column":4},"generated":{"line":65,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":316,"column":4},"generated":{"line":66,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":316,"column":4},"generated":{"line":67,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":316,"column":4},"generated":{"line":68,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":316,"column":4},"generated":{"line":69,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":322,"column":4},"generated":{"line":70,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":322,"column":15},"generated":{"line":70,"column":13}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":322,"column":15},"generated":{"line":70,"column":31}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":322,"column":15},"generated":{"line":70,"column":32}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":323,"column":4},"generated":{"line":70,"column":34}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":324,"column":15},"generated":{"line":71,"column":4}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":324,"column":15},"generated":{"line":71,"column":11}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":324,"column":15},"generated":{"line":71,"column":37}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":325,"column":4},"generated":{"line":72,"column":2}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":329,"column":0},"generated":{"line":73,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":329,"column":0},"generated":{"line":73,"column":1}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":13},"generated":{"line":74,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":13},"generated":{"line":74,"column":7}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":194,"column":18},"generated":{"line":74,"column":8}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":194,"column":18},"generated":{"line":74,"column":25}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":194,"column":53},"generated":{"line":74,"column":28}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":194,"column":53},"generated":{"line":74,"column":29}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":194,"column":53},"generated":{"line":75,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":194,"column":53},"generated":{"line":76,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":194,"column":53},"generated":{"line":77,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":194,"column":53},"generated":{"line":78,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":194,"column":53},"generated":{"line":79,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":194,"column":53},"generated":{"line":80,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":13},"generated":{"line":81,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":13},"generated":{"line":81,"column":7}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":202,"column":18},"generated":{"line":81,"column":8}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":202,"column":18},"generated":{"line":81,"column":26}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":202,"column":60},"generated":{"line":81,"column":29}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":202,"column":60},"generated":{"line":81,"column":52}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":202,"column":73},"generated":{"line":81,"column":53}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":202,"column":73},"generated":{"line":81,"column":57}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":7},"generated":{"line":82,"column":0}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":13},"generated":{"line":82,"column":4}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":13},"generated":{"line":82,"column":10}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":13},"generated":{"line":82,"column":13}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":13},"generated":{"line":82,"column":20}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":13},"generated":{"line":82,"column":21}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":13},"generated":{"line":82,"column":27}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":7},"generated":{"line":82,"column":30}},{"source":"../../src/filters/Filter.ts","name":null,"original":{"line":188,"column":7},"generated":{"line":82,"column":37}}],"sources":{"../../src/filters/Filter.ts":"import { MSAA_QUALITY } from '@pixi/constants';\nimport { Program } from '../shader/Program';\nimport { Shader } from '../shader/Shader';\nimport { State } from '../state/State';\nimport defaultFragment from './defaultFilter.frag';\nimport defaultVertex from './defaultFilter.vert';\n\nimport type { BLEND_MODES, CLEAR_MODES } from '@pixi/constants';\nimport type { Dict } from '@pixi/utils';\nimport type { RenderTexture } from '../renderTexture/RenderTexture';\nimport type { FilterState } from './FilterState';\nimport type { FilterSystem } from './FilterSystem';\n\n/**\n * A filter is a special shader that applies post-processing effects to an input texture and writes into an output\n * render-target.\n *\n * {@link https://pixijs.io/examples/#/filters-basic/blur.js Example} of the\n * {@link PIXI.BlurFilter BlurFilter}.\n *\n * ### Usage\n * Filters can be applied to any DisplayObject or Container.\n * PixiJS' `FilterSystem` renders the container into temporary Framebuffer,\n * then filter renders it to the screen.\n * Multiple filters can be added to the `filters` array property and stacked on each other.\n *\n * ```js\n * import { Container, Filter } from 'pixi.js';\n * const filter = new Filter(myShaderVert, myShaderFrag, { myUniform: 0.5 });\n * const container = new Container();\n * container.filters = [filter];\n * ```\n *\n * ### Previous Version Differences\n *\n * In PixiJS **v3**, a filter was always applied to _whole screen_.\n *\n * In PixiJS **v4**, a filter can be applied _only part of the screen_.\n * Developers had to create a set of uniforms to deal with coordinates.\n *\n * In PixiJS **v5** combines _both approaches_.\n * Developers can use normal coordinates of v3 and then allow filter to use partial Framebuffers,\n * bringing those extra uniforms into account.\n *\n * Also be aware that we have changed default vertex shader, please consult\n * {@link https://github.com/pixijs/pixijs/wiki/v5-Creating-filters Wiki}.\n *\n * ### Frames\n *\n * The following table summarizes the coordinate spaces used in the filtering pipeline:\n *\n * <table>\n * <thead>\n *   <tr>\n *     <th>Coordinate Space</th>\n *     <th>Description</th>\n *   </tr>\n * </thead>\n * <tbody>\n *   <tr>\n *     <td>Texture Coordinates</td>\n *     <td>\n *         The texture (or UV) coordinates in the input base-texture's space. These are normalized into the (0,1) range along\n *         both axes.\n *     </td>\n *   </tr>\n *   <tr>\n *     <td>World Space</td>\n *     <td>\n *         A point in the same space as the world bounds of any display-object (i.e. in the scene graph's space).\n *     </td>\n *   </tr>\n *   <tr>\n *     <td>Physical Pixels</td>\n *     <td>\n *         This is base-texture's space with the origin on the top-left. You can calculate these by multiplying the texture\n *         coordinates by the dimensions of the texture.\n *     </td>\n *   </tr>\n * </tbody>\n * </table>\n *\n * ### Built-in Uniforms\n *\n * PixiJS viewport uses screen (CSS) coordinates, `(0, 0, renderer.screen.width, renderer.screen.height)`,\n * and `projectionMatrix` uniform maps it to the gl viewport.\n *\n * **uSampler**\n *\n * The most important uniform is the input texture that container was rendered into.\n * _Important note: as with all Framebuffers in PixiJS, both input and output are\n * premultiplied by alpha._\n *\n * By default, input normalized coordinates are passed to fragment shader with `vTextureCoord`.\n * Use it to sample the input.\n *\n * ```js\n * import { Filter } from 'pixi.js';\n * const fragment = `\n * varying vec2 vTextureCoord;\n * uniform sampler2D uSampler;\n * void main(void)\n * {\n *    gl_FragColor = texture2D(uSampler, vTextureCoord);\n * }\n * `;\n *\n * const myFilter = new Filter(null, fragment);\n * ```\n *\n * This filter is just one uniform less than {@link PIXI.AlphaFilter AlphaFilter}.\n *\n * **outputFrame**\n *\n * The `outputFrame` holds the rectangle where filter is applied in screen (CSS) coordinates.\n * It's the same as `renderer.screen` for a fullscreen filter.\n * Only a part of  `outputFrame.zw` size of temporary Framebuffer is used,\n * `(0, 0, outputFrame.width, outputFrame.height)`,\n *\n * Filters uses this quad to normalized (0-1) space, its passed into `aVertexPosition` attribute.\n * To calculate vertex position in screen space using normalized (0-1) space:\n *\n * ```glsl\n * vec4 filterVertexPosition( void )\n * {\n *     vec2 position = aVertexPosition * max(outputFrame.zw, vec2(0.)) + outputFrame.xy;\n *     return vec4((projectionMatrix * vec3(position, 1.0)).xy, 0.0, 1.0);\n * }\n * ```\n *\n * **inputSize**\n *\n * Temporary framebuffer is different, it can be either the size of screen, either power-of-two.\n * The `inputSize.xy` are size of temporary framebuffer that holds input.\n * The `inputSize.zw` is inverted, it's a shortcut to evade division inside the shader.\n *\n * Set `inputSize.xy = outputFrame.zw` for a fullscreen filter.\n *\n * To calculate input normalized coordinate, you have to map it to filter normalized space.\n * Multiply by `outputFrame.zw` to get input coordinate.\n * Divide by `inputSize.xy` to get input normalized coordinate.\n *\n * ```glsl\n * vec2 filterTextureCoord( void )\n * {\n *     return aVertexPosition * (outputFrame.zw * inputSize.zw); // same as /inputSize.xy\n * }\n * ```\n *\n * **resolution**\n *\n * The `resolution` is the ratio of screen (CSS) pixels to real pixels.\n *\n * **inputPixel**\n *\n * `inputPixel.xy` is the size of framebuffer in real pixels, same as `inputSize.xy * resolution`\n * `inputPixel.zw` is inverted `inputPixel.xy`.\n *\n * It's handy for filters that use neighbour pixels, like {@link PIXI.FXAAFilter FXAAFilter}.\n *\n * **inputClamp**\n *\n * If you try to get info from outside of used part of Framebuffer - you'll get undefined behaviour.\n * For displacements, coordinates has to be clamped.\n *\n * The `inputClamp.xy` is left-top pixel center, you may ignore it, because we use left-top part of Framebuffer\n * `inputClamp.zw` is bottom-right pixel center.\n *\n * ```glsl\n * vec4 color = texture2D(uSampler, clamp(modifiedTextureCoord, inputClamp.xy, inputClamp.zw));\n * ```\n *\n * Or:\n *\n * ```glsl\n * vec4 color = texture2D(uSampler, min(modifigedTextureCoord, inputClamp.zw));\n * ```\n *\n * ### Additional Information\n *\n * Complete documentation on Filter usage is located in the\n * {@link https://github.com/pixijs/pixijs/wiki/v5-Creating-filters Wiki}.\n *\n * Since PixiJS only had a handful of built-in filters, additional filters can be downloaded\n * {@link https://github.com/pixijs/pixi-filters here} from the PixiJS Filters repository.\n * @memberof PIXI\n */\nexport class Filter extends Shader\n{\n    /**\n     * Default filter resolution for any filter.\n     * @static\n     */\n    public static defaultResolution: number | null = 1;\n\n    /**\n     * Default filter samples for any filter.\n     * @static\n     * @type {PIXI.MSAA_QUALITY|null}\n     * @default PIXI.MSAA_QUALITY.NONE\n     */\n    public static defaultMultisample: MSAA_QUALITY | null = MSAA_QUALITY.NONE;\n\n    /**\n     * The padding of the filter. Some filters require extra space to breath such as a blur.\n     * Increasing this will add extra width and height to the bounds of the object that the\n     * filter is applied to.\n     */\n    public padding: number;\n\n    /**\n     * The samples override of the filter instance.\n     * If set to `null`, the sample count of the current render target is used.\n     * @default PIXI.Filter.defaultMultisample\n     */\n    public multisample: MSAA_QUALITY | null;\n\n    /** If enabled is true the filter is applied, if false it will not. */\n    public enabled: boolean;\n\n    /**\n     * If enabled, PixiJS will fit the filter area into boundaries for better performance.\n     * Switch it off if it does not work for specific shader.\n     * @default true\n     */\n    public autoFit: boolean;\n\n    /**\n     * Legacy filters use position and uvs from attributes (set by filter system)\n     * @readonly\n     */\n    public legacy: boolean;\n\n    /** The WebGL state the filter requires to render. */\n    state: State;\n\n    protected _resolution: number | null;\n\n    /**\n     * @param vertexSrc - The source of the vertex shader.\n     * @param fragmentSrc - The source of the fragment shader.\n     * @param uniforms - Custom uniforms to use to augment the built-in ones.\n     */\n    constructor(vertexSrc?: string, fragmentSrc?: string, uniforms?: Dict<any>)\n    {\n        const program = Program.from(vertexSrc || Filter.defaultVertexSrc,\n            fragmentSrc || Filter.defaultFragmentSrc);\n\n        super(program, uniforms);\n\n        this.padding = 0;\n        this.resolution = Filter.defaultResolution;\n        this.multisample = Filter.defaultMultisample;\n        this.enabled = true;\n        this.autoFit = true;\n        this.state = new State();\n    }\n\n    /**\n     * Applies the filter\n     * @param {PIXI.FilterSystem} filterManager - The renderer to retrieve the filter from\n     * @param {PIXI.RenderTexture} input - The input render target.\n     * @param {PIXI.RenderTexture} output - The target to output to.\n     * @param {PIXI.CLEAR_MODES} [clearMode] - Should the output be cleared before rendering to it.\n     * @param {object} [_currentState] - It's current state of filter.\n     *        There are some useful properties in the currentState :\n     *        target, filters, sourceFrame, destinationFrame, renderTarget, resolution\n     */\n    apply(filterManager: FilterSystem, input: RenderTexture, output: RenderTexture, clearMode?: CLEAR_MODES,\n        _currentState?: FilterState): void\n    {\n        // Do as you please!\n\n        filterManager.applyFilter(this, input, output, clearMode);\n\n        // Or just do a regular render..\n    }\n\n    /**\n     * Sets the blend mode of the filter.\n     * @default PIXI.BLEND_MODES.NORMAL\n     */\n    get blendMode(): BLEND_MODES\n    {\n        return this.state.blendMode;\n    }\n\n    set blendMode(value: BLEND_MODES)\n    {\n        this.state.blendMode = value;\n    }\n\n    /**\n     * The resolution of the filter. Setting this to be lower will lower the quality but\n     * increase the performance of the filter.\n     * If set to `null` or `0`, the resolution of the current render target is used.\n     * @default PIXI.Filter.defaultResolution\n     */\n    get resolution(): number | null\n    {\n        return this._resolution;\n    }\n\n    set resolution(value: number | null)\n    {\n        this._resolution = value;\n    }\n\n    /**\n     * The default vertex shader source\n     * @readonly\n     */\n    static get defaultVertexSrc(): string\n    {\n        return defaultVertex;\n    }\n\n    /**\n     * The default fragment shader source\n     * @readonly\n     */\n    static get defaultFragmentSrc(): string\n    {\n        return defaultFragment;\n    }\n\n    /** Used for caching shader IDs. */\n    static SOURCE_KEY_MAP: Dict<string>;\n}\n"},"lineCount":null}},"error":null,"hash":"2e622a7cdafbaa8f28558fa461c9cf51","cacheData":{"env":{}}}