{"id":"../node_modules/@pixi/particle-container/lib/particles.vert.mjs","dependencies":[{"name":"/Users/marvin/Projects/runandjump/node_modules/@pixi/particle-container/lib/particles.vert.mjs.map","includedInParent":true,"mtime":1707171147008},{"name":"/Users/marvin/Projects/runandjump/package.json","includedInParent":true,"mtime":1707178231918},{"name":"/Users/marvin/Projects/runandjump/node_modules/@pixi/particle-container/package.json","includedInParent":true,"mtime":1707171147007}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar vertex = exports.default = `attribute vec2 aVertexPosition;\nattribute vec2 aTextureCoord;\nattribute vec4 aColor;\n\nattribute vec2 aPositionCoord;\nattribute float aRotation;\n\nuniform mat3 translationMatrix;\nuniform vec4 uColor;\n\nvarying vec2 vTextureCoord;\nvarying vec4 vColor;\n\nvoid main(void){\n    float x = (aVertexPosition.x) * cos(aRotation) - (aVertexPosition.y) * sin(aRotation);\n    float y = (aVertexPosition.x) * sin(aRotation) + (aVertexPosition.y) * cos(aRotation);\n\n    vec2 v = vec2(x, y);\n    v = v + aPositionCoord;\n\n    gl_Position = vec4((translationMatrix * vec3(v, 1.0)).xy, 0.0, 1.0);\n\n    vTextureCoord = aTextureCoord;\n    vColor = aColor * uColor;\n}\n`;"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"6cfec2ebcfbcd56b5e0d67d033bd9941","cacheData":{"env":{}}}